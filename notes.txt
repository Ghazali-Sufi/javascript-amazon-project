Objects: group related values together

We use JSON When we send data between computers, when we store data
JSON does not support functions
stringfy(): is a method of the json object, so it's a function that is saved inside JSON object
            convert object to json
parse(): convert json to object

Array => Another type of value, and it represents a list of values

Asynchronous code: Computer will not wait for a line to finish before going to the next line.
Synchronous code: Computer will wait for a line to finish before going to the next line.

regular function has Hoisting, means we can call this function before we create it and we don't have to worry about which order we write the code 

Git: Track changes in our code
Repository: a folder where changes are being tracked

Data attribute: is an html attribute, allows us to attach any information to an element

External Libraries: code outside of our project that someone else wrote

Model: saves and manages the Data, so all the code in data folder is called the model, because that codes saves and manages our data 

View: The code that takes the data and displays it on the page, it's a code that takes our data form the data folder/database and then generates all the html

Controller: runs some code when we interact some page, like event listeners, because they do something when we interact the page or with the view

First we use the model to generate the view, then when we interact with the view it will run the controller, then the controller will update the model 

MVC is a way to organize and design our code

Automated Testing: is using code to test code

Taste suite(suwiit): a group of related tests

Testing Framework: is an external library that helps us write tests easier

Test Coverage: How much of the code is being tested 

Flaky Test: is a test that sometimes passes and sometimes fails

Mocks: Lets us replace a method with a fake version

Unit Tests: testing single function => Testing one piece of the code 

Integration Tests: testing a whole page or part of the page => tests many units/pieces of code working together

Hook: let us run some code for each test

Object Oriented Programming(OOP): organizing our code into objects, we put everything together into an object 

Procedural Programming: a set of step-by-step instructions, we organize our code into separate functions

Method: a function that is inside an object

Class: is specifically designed for generating objects, and is basically an object generator

Inheritance: lets us reuse code between classes

Polymorphism: use a method without knowing the class, so the class will determine what this method does

XMLHttpRequest: is a class used to send an Http message

asynchronous code: means it doesn't wait a line of code to finish, it just sends the request

Anonymous function: function without a name

promises: let us wait for some asynchronous code to finish before going to the next step

fetch: better way to make HTTP requests

Asyn Await: even a better way to handle asynchronous code, it's a shortcut for promises
async: makes a function return a promise
await: let's us wait for a promise to finish, before going to the next line.

Note: we can only use await when we are inside an async function